<?php/** * 0元淘商品管理 * * * */defined('InSystem') or exit('Access Invalid!');class zero_goodsControl extends SystemControl{    public function __construct()    {        parent::__construct();    }    /**     * 商品列表     */    public function indexOp()    {        $model_zero_goods = Model('zero_goods');        /**         * 检索条件         */        $condition = array();        if (!empty($_GET['goods_name'])) {            $condition['goods_name'] = array('like', "%" . $_GET['goods_name'] . "%");        }        if (is_numeric($_GET['goods_state'])) {            $condition['goods_state'] = array('eq', $_GET['goods_state']);        }        if (is_numeric($_GET['goods_verify'])) {            $condition['goods_verify'] = array('eq', $_GET['goods_verify']);        }        if (is_numeric($_GET['goods_commend'])) {            $condition['goods_commend'] = array('eq', $_GET['goods_commend']);        }//            $list = $model_zero_goods->getGoodsList($condition, "*", 10);        $list = $model_zero_goods->getGoodsList($condition, '*', '', 'goods_progress DESC', 0, 10, false, 0);//            dump($list);die;        Tpl::output('page', $model_zero_goods->showpage());        Tpl::output('list', $list);        Tpl::output('goods_name', trim($_GET['goods_name']));        Tpl::output('goods_state', trim($_GET['goods_state']));        Tpl::output('goods_verify', trim($_GET['goods_verify']));        Tpl::output('goods_commend', trim($_GET['goods_commend']));        Tpl::showpage('zero_goods.index');    }    /**     * 增加商品     */    public function goods_addOp()    {        if (chksubmit()) {            $model_zero_goods = Model('zero_goods');            $obj_validate = new Validate();            $obj_validate->validateparam = array(                array("input" => $_POST["goods_name"], "require" => "true", "message" => '商品名称不能为空!'),                array("input" => $_POST["goods_total_num"], "require" => "true", "message" => '需参加总人数不能为空'),                array("input" => $_POST["goods_total_num"], "require" => "true", 'validator' => 'Number', "message" => '需参加总人数只能为数字'),                array("input" => $_POST["goods_price"], "require" => "true", "message" => '商品市场价不能为空'),                array("input" => $_POST["goods_price"], "require" => "true", 'validator' => 'Number', "message" => '商品市场价只能为数字'),                array("input" => $_POST["goods_freight"], "require" => "true", "message" => '商品运费不能为空'),                array("input" => $_POST["goods_freight"], "require" => "true", 'validator' => 'Number', "message" => '商品运费只能为数字'),                array("input" => $_POST["goods_storage"], "require" => "true", "message" => '商品库存不能为空'),                array("input" => $_POST["goods_storage"], "require" => "true", 'validator' => 'Number', "message" => '商品库存只能为数字'),                array("input" => $_POST["goods_storage_alarm"], "require" => "true", "message" => '商品库存警报值不能为空'),                array("input" => $_POST["goods_storage_alarm"], "require" => "true", 'validator' => 'Number', "message" => '商品库存警报值只能为数字'),                array("input" => $_POST["goods_weight"], "require" => "true", "message" => '商品重量不能为空'),                array("input" => $_FILES["goods_image_index"], "require" => "true", "message" => '商品主图不能为空'),                array("input" => $_FILES["goods_image_list"], "require" => "true", "message" => '商品详情轮播图不能为空'),                array("input" => $_POST["content"], "require" => "true", "message" => '商品详情不能为空'),            );            $error = $obj_validate->validate();            if ($error != '') {                showMessage($error);            } else {                //总参加人数要大于0                if ($_POST["goods_total_num"] <= 0) {                    showMessage('总参加人数要大于0');                }                $insert_array = array();                $upload = new UploadFile();                $file_dir = ATTACH_ZERO_GOODS . '/' . date('Ymd');                $upload->set('default_dir', $file_dir);                //上传主图                if (!empty($_FILES['goods_image_index']['name'])) {                    $goods_image_index = '';                    $upload->file_name = '';                    $upload_result = $upload->upfile('goods_image_index');                    if ($upload_result) {                        $goods_image_index = $file_dir . '/' . $upload->file_name;                    } else {                        showMessage('商品主图::' . $upload->error);                    }                    $insert_array['goods_image_index'] = $goods_image_index;                }                //上传轮播图                if (!empty($_FILES['goods_image_list']['name'])) {                    $goods_image_list_file = $_FILES['goods_image_list'];                    $file = array();                    $goods_img_list = array();                    $goods_image_list = '';                    //限制最多只能上传五张                    foreach ($goods_image_list_file['name'] as $k => $v) {                        if ($k <= 4) {                            $file['name'] = $v;                            $file['type'] = $goods_image_list_file['type'][$k];                            $file['tmp_name'] = $goods_image_list_file['tmp_name'][$k];                            $file['error'] = $goods_image_list_file['error'][$k];                            $file['size'] = $goods_image_list_file['size'][$k];                            $upload->file_name = '';                            $upload_result = $upload->upfileArray($file);                            if ($upload_result) {                                $goods_img_list[] = $file_dir . '/' . $upload->file_name;                            } else {                                showMessage('商品详情轮播图:' . $upload->error);                            }                        }                    }                    if (!empty($goods_img_list)) {                        $goods_image_list = implode(';', $goods_img_list);                    }                    $insert_array['goods_image_list'] = $goods_image_list;                }                $insert_array['goods_name'] = trim($_POST['goods_name']);                $insert_array['goods_total_num'] = trim($_POST['goods_total_num']);                $insert_array['goods_surplus_num'] = $insert_array['goods_total_num'];                $insert_array['goods_join_num'] = 0;                $insert_array['goods_price'] = trim($_POST['goods_price']);                $insert_array['goods_freight'] = trim($_POST['goods_freight']);                $insert_array['goods_storage'] = trim($_POST['goods_storage']);                $insert_array['goods_storage_alarm'] = intval($_POST['goods_storage_alarm']);                $insert_array['goods_click'] = intval($_POST['goods_click']);                $insert_array['goods_salenum'] = intval($_POST['goods_salenum']);                $insert_array['goods_state'] = intval($_POST['goods_state']);                $insert_array['goods_verify'] = intval($_POST['goods_verify']);                $insert_array['goods_commend'] = intval($_POST['goods_commend']);                $insert_array['goods_weight'] = trim($_POST['goods_weight']);                $insert_array['goods_detail'] = trim($_POST['content']);                $insert_array['goods_addtime'] = TIMESTAMP;                $insert_array['goods_edittime'] = TIMESTAMP;                $result = $model_zero_goods->addGoods($insert_array);                if ($result) {                    $url = array(                        array(                            'url' => 'index.php?act=zero_goods&op=goods_add',                            'msg' => '继续添加商品',                        ),                        array(                            'url' => 'index.php?act=zero_goods&op=index',                            'msg' => '返回商品列表',                        )                    );                    $this->log('添加0元淘商品:' . '[' . $_POST['goods_name'] . ']', 1);                    showMessage('保存成功', $url);                } else {                    showMessage('保存失败');                }            }        }        Tpl::showpage('zero_goods.add');    }    /**     * 商品编辑     */    public function goods_editOp()    {        $model_zero_goods = Model('zero_goods');        $info = $model_zero_goods->getGoodsInfo(array('goods_id' => intval($_GET['goods_id'])));//                dump($info);        if (chksubmit()) {//            if ($_POST["goods_total_num"] != $info['goods_surplus_num'] && $info['goods_surplus_num'] >= 0) {//                showMessage('本商品还没有结束活动,不能修改参与总人数!');//            }            $obj_validate = new Validate();            $obj_validate->validateparam = array(                array("input" => $_POST["goods_name"], "require" => "true", "message" => '商品名称不能为空!'),                array("input" => $_POST["goods_total_num"], "require" => "true", "message" => '需参加总人数不能为空'),                array("input" => $_POST["goods_total_num"], "require" => "true", 'validator' => 'Number', "message" => '需参加总人数只能为数字'),                array("input" => $_POST["goods_price"], "require" => "true", "message" => '商品市场价不能为空'),                array("input" => $_POST["goods_freight"], "require" => "true", "message" => '商品运费不能为空'),                array("input" => $_POST["goods_storage"], "require" => "true", "message" => '商品库存不能为空'),                array("input" => $_POST["goods_storage"], "require" => "true", 'validator' => 'Number', "message" => '商品库存只能为数字'),                array("input" => $_POST["goods_storage_alarm"], "require" => "true", "message" => '商品库存警报值不能为空'),                array("input" => $_POST["goods_storage_alarm"], "require" => "true", 'validator' => 'Number', "message" => '商品库存警报值只能为数字'),                array("input" => $_POST["goods_weight"], "require" => "true", "message" => '商品重量不能为空'),                array("input" => $_POST["content"], "require" => "true", "message" => '商品详情不能为空'),            );            $error = $obj_validate->validate();            if ($error != '') {                showMessage($error);            } else {                //总参加人数要大于0                if ($_POST["goods_total_num"] <= 0) {                    showMessage('总参加人数要大于0');                }                $where = array();                $where['goods_id'] = intval($_POST['goods_id']);                $update_array = array();                $upload = new UploadFile();                $file_dir = ATTACH_ZERO_GOODS . '/' . date('Ymd');                $upload->set('default_dir', $file_dir);                //上传主图                if (!empty($_FILES['goods_image_index']['name'])) {                    $goods_image_index = '';                    $upload->file_name = '';                    $upload_result = $upload->upfile('goods_image_index');                    if ($upload_result) {                        $goods_image_index = $file_dir . '/' . $upload->file_name;                    } else {                        showMessage('商品主图::' . $upload->error);                    }                    $update_array['goods_image_index'] = $goods_image_index;                }                //上传轮播图                if (!empty($_FILES['goods_image_list']['name'][0])) {                    $goods_image_list_file = $_FILES['goods_image_list'];                    $file = array();                    $goods_img_list = array();                    $goods_image_list = '';                    //限制最多只能上传五张                    foreach ($goods_image_list_file['name'] as $k => $v) {                        if ($k <= 4) {                            $file['name'] = $v;                            $file['type'] = $goods_image_list_file['type'][$k];                            $file['tmp_name'] = $goods_image_list_file['tmp_name'][$k];                            $file['error'] = $goods_image_list_file['error'][$k];                            $file['size'] = $goods_image_list_file['size'][$k];                            $upload->file_name = '';                            $upload_result = $upload->upfileArray($file);                            if ($upload_result) {                                $goods_img_list[] = $file_dir . '/' . $upload->file_name;                            } else {                                showMessage('商品详情轮播图:' . $upload->error);                            }                        }                    }                    if (!empty($goods_img_list)) {                        $goods_image_list = implode(';', $goods_img_list);                    }                    $update_array['goods_image_list'] = $goods_image_list;                }                $update_array['goods_name'] = trim($_POST['goods_name']);                $update_array['goods_total_num'] = trim($_POST['goods_total_num']);                $update_array['goods_price'] = trim($_POST['goods_price']);                $update_array['goods_freight'] = trim($_POST['goods_freight']);                $update_array['goods_storage'] = trim($_POST['goods_storage']);                $update_array['goods_storage_alarm'] = intval($_POST['goods_storage_alarm']);                $update_array['goods_click'] = intval($_POST['goods_click']);                $update_array['goods_salenum'] = intval($_POST['goods_salenum']);                $update_array['goods_state'] = intval($_POST['goods_state']);                $update_array['goods_verify'] = intval($_POST['goods_verify']);                $update_array['goods_commend'] = intval($_POST['goods_commend']);                $update_array['goods_weight'] = trim($_POST['goods_weight']);                $update_array['goods_detail'] = trim($_POST['content']);                $result = $model_zero_goods->editGoods($update_array, $where);                if ($result) {                    //删除主图                    if ($goods_image_index && !empty($info['goods_image_index'])) {                        @unlink(BASE_UPLOAD_PATH . DS . $info['goods_image_index']);                    }                    //删除轮播图                    if ($goods_image_list && !empty($info['goods_image_list'])) {                        $lb_img_list = explode(';', $info['goods_image_list']);                        foreach ($lb_img_list as $gv) {                            @unlink(BASE_UPLOAD_PATH . DS . $gv);                        }                    }                    $url = array(                        array(                            'url' => 'index.php?act=zero_goods&op=goods_edit&goods_id=' . intval($_POST['goods_id']),                            'msg' => '继续编辑商品',                        ),                        array(                            'url' => 'index.php?act=zero_goods&op=index',                            'msg' => '返回商品列表',                        )                    );                    $this->log('编辑[' . $_POST['goods_name'] . ']', 1);                    showMessage('保存成功', $url);                } else {                    $this->log('编辑[' . $_POST['goods_name'] . ']', 0);                    showMessage('保存失败');                }            }        }        if (empty($info)) {            showMessage('参数错误');        }        Tpl::output('info', $info);        Tpl::showpage('zero_goods.edit');    }    /**     * 删除商品     */    public function goods_delOp()    {        $rec_url = 'index.php?act=zero_goods&op=index';        $goods_id = $_GET['goods_id'];        if (empty($goods_id)) {            showMessage('请选择商品', $rec_url);        }        $where['goods_id'] = $goods_id;        $model_zero_goods = Model('zero_goods');        $info = $model_zero_goods->getGoodsInfo($where);        if (empty($info)) {            showMessage('商品不存在', $rec_url);        }        if (!($info['goods_total_num'] > 0 && $info['goods_surplus_num'] != 0 && $info['goods_join_num'] == 0)) {            showMessage('商品活动还没有结束不能删除!', $rec_url);        }        $result = $model_zero_goods->delGoods($where);        if ($result) {            $this->log('删除:[ID:' . $goods_id . ']', 1);            showMessage('删除成功', $rec_url);        } else {            $this->log('删除:[ID:' . $goods_id . ']', 0);            showMessage('删除失败', $rec_url);        }    }    /**     * ajax操作     */    public function ajaxOp()    {        $model_zero_goods = Model('zero_goods');        switch ($_GET['branch']) {            /**             * 品牌名称             */            case 'check_goods_name':                /**                 * 判断是否有重复                 */                $condition['goods_name'] = trim($_GET['goods_name']);                $result = $model_zero_goods->getGoodsCount($condition);                if (empty($result)) {                    echo 'true';                    exit;                } else {                    echo 'false';                    exit;                }                break;        }    }}